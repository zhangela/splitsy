# import Link, Vote, Item, LinkSubscriptionPayload, VoteSubscriptionPayload from "./generated/prisma.graphql"

type Query {
  feed(filter: String, skip: Int, first: Int, orderBy: LinkOrderByInput): Feed!
  transactions(userId: String!): [Transaction!]!
}

type Mutation {
  storeAccessToken(publicToken: String!, userId: String!): Boolean!
  post(url: String!, description: String!): Link!
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  vote(linkId: ID!): Vote
}

type Subscription {
  newLink: LinkSubscriptionPayload
  newVote: VoteSubscriptionPayload
}

type AuthPayload {
  token: String
  user: User
}

type Feed {
  links: [Link!]!
  count: Int!
}

type Transaction {
  transaction_id: ID!
  account_id: String!
  category: [String!]
  category_id: String!
  transaction_type: String!
  name: String!
  amount: Float!
  date: String!
  location: Location
  payment_meta: PaymentMeta
  pending: Boolean!
  pending_transaction_id: String
  accountOwner: String
}

type Location {
  address: String
  city: String
  state: String
  zip: String
  lat: String
  lon: String
}

type PaymentMeta {
  reference_number: String
  ppd_id: String
  payee_name: String
}
