# import Link, Vote, Item, Trip, PlaidTransaction, LinkSubscriptionPayload, VoteSubscriptionPayload from "./generated/prisma.graphql"

type Query {
  transactions(userId: String!): [PlaidTransaction!]
  trip(tripId: String!): Trip
  connectedItem(userId: String!): PlaidItem
  currentTrip(userId: String!): Trip
  availableUsers(userId: String!): [User!]!
  tripTransactions(tripId: String!): [TripTransaction!]

  # plaidItem(clientId: String!, secret: String!, accessToken: String!): PlaidItem
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload

  storeAccessToken(publicToken: String!, userId: String!): Boolean!
  createTrip(name: String!, userIds: [String!]!): Trip!

  addTransactionToTrip(
    tripId: String!,
    plaidTransactionId: String!,
    category: [String!],
    name: String!,
    amount: Float!,
    date: String!): TripTransaction

  removeTransactionFromTrip(
    tripId: String!,
    plaidTransactionId: String!): Boolean!
}

type Subscription {
  newLink: LinkSubscriptionPayload
  newVote: VoteSubscriptionPayload
}

type AuthPayload {
  token: String
  user: User
}

type PlaidItem {
  available_products: [String!]
  billed_products: [String!]
  institution_id: String!
  item_id: String!

  userId: String!

  plaidTransactions(
    startDate: String!,
    endDate: String!,
    account_ids: [String!]
    count: Int
    offset: Int
  ): [PlaidTransaction!]!

}

